<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
			    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-2.5.xsd
               	http://www.springframework.org/schema/aop 
				http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
                http://www.springframework.org/schema/tx 
                http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <!-- 配置文件配置数据源-->
   	<bean id="placeholderConfig"
		class="com.common.util.security.JdbcEncryptFromPropertiesFile">
		<property name="location">
			<value>classpath:other/init.properties</value>
		</property>
	</bean>
    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" dependency-check="none">
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="user">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>
		<property name="numHelperThreads">
			<value>${c3p0.numHelperThreads}</value>
		</property>
	</bean>
	<!-- hibernate配置 -->
	<!--处理BOLB字段-->
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"
		lazy-init="true" />
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor">
			<ref bean="nativeJdbcExtractor" />
		</property>
	</bean>
	<!-- 会话工厂 -->  
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="useTransactionAwareDataSource">
			<value>true</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.cache.provider_class">
					${hibernate.cache.provider_class}
				</prop>
				<prop key="hibernate.cache.use_query_cache">
					${hibernate.cache.use_query_cache}
				</prop>
				<prop key="hibernate.jdbc.fetch_size">
					${hibernate.jdbc.fetch_size}
				</prop>
				<prop key="hibernate.jdbc.batch_size">
					${hibernate.jdbc.batch_size}
				</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.**.pojo" />
		<property name="lobHandler" ref="lobHandler" />
		<property name="mappingLocations">
			<list></list>
		</property>
		<property name="mappingResources">
			<list></list>
		</property>
	</bean>
	
	<!-- 定义事务管理器 -->    
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	
	<!-- 定义事 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="*" propagation="REQUIRED" />  
        </tx:attributes>  
    </tx:advice>务 --> 
      
    <!-- 事务通知 -->  
	<tx:advice id="transactionManagerAdivice"
		transaction-manager="transactionManager">
		<tx:attributes>
		    <!-- 所有方法，REQUIRED支持当前事务，如果木有则创建 -->
			<tx:method name="*" isolation="READ_COMMITTED" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置切入点和方面  -->
	<aop:config>
		<aop:pointcut expression="execution(* com..*.service..*.*(..))"
			id="bankServicePc" />
		<aop:advisor advice-ref="transactionManagerAdivice"
			pointcut-ref="bankServicePc" />
	</aop:config>

	<bean id="hBaseDao" class="com.common.base.dao.impl.HBaseDaoImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
   	<bean id="hService" class="com.common.base.service.impl.HServiceImpl" 
		parent="hBaseDao" />
		
	<bean id="loginInterceptor" class="com.common.framework.filter.LoginInterceptor" />
</beans>